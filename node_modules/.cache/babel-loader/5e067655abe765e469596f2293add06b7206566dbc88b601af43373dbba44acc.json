{"ast":null,"code":"import _slicedToArray from\"E:/ReactTutorial/react-projects/expense-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./ExpenseForm.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExpenseForm=function ExpenseForm(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),enteredTitle=_useState2[0],setEnteredTitle=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),enteredAmount=_useState4[0],setEnteredAmount=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),enteredDate=_useState6[0],setEnteredDate=_useState6[1];// instead of using those three useStates we can do the below thing..\n// const [userInput,setUserInput]=useState({\n//     enteredTitle:'',\n//     enteredAmount:'',\n//     enteredDate:'',\n// });\nvar titleChangeHandler=function titleChangeHandler(event){setEnteredTitle(event.target.value);// setUserInput({\n// ...userInput, //here ...is called a spread operator which basically copies the input data into the userInput to avoid getting lost.\n// enteredTitle:event.target.value,        \n//using this approach for managing multiple states in many cases both will work fine but keep in mind that react schedules state updates it does'nt performs it instantly, most of them gets scheduled and therefore theoritically a lot of state scheduled at the same time you could be depending on the outdated or incorrect state snapshots. So this is why this approach is incorrect , so instead we use\n// setUserInput((prevState)=>{\n//     return{ ...prevState, enteredTitle: event.target.value};\n// });\n};var amountChangeHandler=function amountChangeHandler(event){setEnteredAmount(event.target.value);// setUserInput({\n//     ...userInput,\n//     enteredAmount:event.target.value,\n// })\n};var dateChangeHandler=function dateChangeHandler(event){setEnteredDate(event.target.value);// setUserInput({\n//     ...userInput, \n//     enteredDate:event.target.value,\n// })\n};var submitHandler=function submitHandler(event){event.preventDefault();var expenseData={title:enteredTitle,amount:enteredAmount,date:new Date(enteredDate)};props.onSaveExpenseData(expenseData);setEnteredAmount('');setEnteredTitle('');setEnteredDate('');};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"\",children:\"Title\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:enteredTitle,onChange:titleChangeHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"\",children:\"Amount\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:enteredAmount,min:\"0.01\",step:\"0.01\",onChange:amountChangeHandler})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-expense__control\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"\",children:\"Date\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:enteredDate,min:\"2020-01-01\",max:\"2023-12-31\",onChange:dateChangeHandler})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"new-expense__actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Expense\"})})]});};export default ExpenseForm;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","ExpenseForm","props","_useState","_useState2","_slicedToArray","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","_useState5","_useState6","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","onSubmit","children","className","htmlFor","type","onChange","min","step","max"],"sources":["E:/ReactTutorial/react-projects/expense-tracker/src/components/NewExpenses/ExpenseForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ExpenseForm.css'\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    // instead of using those three useStates we can do the below thing..\r\n\r\n    // const [userInput,setUserInput]=useState({\r\n    //     enteredTitle:'',\r\n    //     enteredAmount:'',\r\n    //     enteredDate:'',\r\n    // });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        // setUserInput({\r\n        // ...userInput, //here ...is called a spread operator which basically copies the input data into the userInput to avoid getting lost.\r\n        // enteredTitle:event.target.value,        \r\n        //using this approach for managing multiple states in many cases both will work fine but keep in mind that react schedules state updates it does'nt performs it instantly, most of them gets scheduled and therefore theoritically a lot of state scheduled at the same time you could be depending on the outdated or incorrect state snapshots. So this is why this approach is incorrect , so instead we use\r\n        // setUserInput((prevState)=>{\r\n        //     return{ ...prevState, enteredTitle: event.target.value};\r\n        // });\r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount:event.target.value,\r\n        // })\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput, \r\n        //     enteredDate:event.target.value,\r\n        // })\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate),\r\n        }\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredAmount('');\r\n        setEnteredTitle('');\r\n        setEnteredDate(''); \r\n    };\r\n\r\n\r\n    return <form onSubmit={submitHandler}>\r\n        <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <label htmlFor=\"\">Title</label>\r\n                <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label htmlFor=\"\">Amount</label>\r\n                <input type=\"number\" value={enteredAmount} min='0.01' step='0.01' onChange={amountChangeHandler} />\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <label htmlFor=\"\">Date</label>\r\n                <input type=\"date\" value={enteredDate} min='2020-01-01' max='2023-12-31' onChange={dateChangeHandler} />\r\n            </div>\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n            <button type='submit' >\r\n                Add Expense\r\n            </button>\r\n        </div>\r\n    </form>\r\n};\r\n\r\nexport default ExpenseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}